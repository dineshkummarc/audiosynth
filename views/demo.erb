<!-- 



HTML5 Audio spec implementation (looping and playback)
http://www.w3schools.com/html5/att_audio_loop.asp


music is math - notes + frequencies
http://members.cox.net/mathmistakes/music.htm


Phasing FX.
http://www.math.montana.edu/frankw/ccp/before-calculus/trigonometry/soundtrg/body.htm

Distinction between differents wave type (swatooh, square, and sins)
http://en.wikipedia.org/wiki/Sine_wave

http://en.wikipedia.org/wiki/Harmonics




Phaser FX
http://en.wikipedia.org/wiki/Phaser_(effect)


Binaural recording
http://www.wired.com/threatlevel/2010/07/digital-drugs/
That is one positive use, to quit a drug. Other binaural beats are to help sleeping, positive thoughts, other good things. I've tried Gates of Hades and I couldn't finish listening to it. It is freaky. I-Doser wasn't kidding. I-Doser makes some of the most extreme binaural beats around. I'd like to NOTE that everyone reacts the same to a binaural beats. For example I could listen to a binaural beats like I-Doser's Cliffhanger (meant to feel like I'm on the edge of a clifft) and feel the full effect while someone else who tries it feels nothing. Doesn't work for everyone! Get that through your head

http://en.wikipedia.org/wiki/Binaural_beats

Brain waves
Main article: Electroencephalography
Frequency range	Name	Usually associated with:
> 40 Hz	Gamma waves	Higher mental activity, including perception, problem solving, fear, and consciousness
13–39 Hz	Beta waves	Active, busy or anxious thinking and active concentration, arousal, cognition, and or paranoia
7–13 Hz	Alpha waves	Relaxation (while awake), pre-sleep and pre-wake drowsiness, REM sleep, Dreams
4–7 Hz	Theta waves	deep meditation/relaxation, NREM sleep
< 4 Hz	Delta waves	Deep dreamless sleep, loss of body awareness



// LFO
http://en.wikipedia.org/wiki/Low-frequency_oscillation

An LFO can be routed to control, for example, the frequency of the audio oscillator, its phase, stereo panning, filter frequency, or amplification. When routed to control pitch, an LFO creates vibrato. When an LFO modulates amplitude (volume), it creates tremolo. On most synthesizers and sound modules, LFOs feature several controllable parameters, which often include a variety of different waveforms, a rate control, routing options (as described above), a tempo sync feature, and an option to control how much the LFO will modulate the audio signal.
Electronic musicians use LFO for a variety of applications. They may be used to add simple vibrato or tremolo to a melody, or for more complex applications such as triggering gate envelopes, or controlling the rate of arpeggiation.
Differences between LFO rates also account for a number of commonly heard effects in modern music. A very low rate can be used to modulate a filter's cutoff frequency, thereby providing the characteristic gradual sensation of the sound becoming clearer or closer to the listener. Alternatively, a high rate can be used for bizarre 'rippling' sound effects (indeed, another important use of LFO would be for various sound effects used in films). Such effects are difficult to describe, and are more understandable when heard. Dubstep is a form of electronic music that employs heavy use of LFOs for bass sounds that have a "generic wobble" effect.



-->




<html>
<head>
<title>HTML5 audio synth experiment</title>
</head>
<body>
<link rel="stylesheet" href="keys.css">
<link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Droid+Sans' rel='stylesheet' type='text/css'>
<!-- 
<script src="sh_main.min.js"></script>
<script src="sh_javascript.min.js"></script>-->
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js"></script>
<script src="riffwave.js"></script>
<script src="synth.js"></script>






<div id="keyboard">
    	<ul>
        	<li><a href="#" class="key c27 fn"><span id="esc">esc</span></a></li>
        	<li><a href="#" class="key c112 fn"><span>F1</span></a></li>
        	<li><a href="#" class="key c113 fn"><span>F2</span></a></li>
        	<li><a href="#" class="key c114 fn"><span>F3</span></a></li>
        	<li><a href="#" class="key c115 fn"><span>F4</span></a></li>
        	<li><a href="#" class="key c116 fn"><span>F5</span></a></li>
        	<li><a href="#" class="key c117 fn"><span>F6</span></a></li>
        	<li><a href="#" class="key c118 fn"><span>F7</span></a></li>
        	<li><a href="#" class="key c119 fn"><span>F8</span></a></li>
        	<li><a href="#" class="key c120 fn"><span>F9</span></a></li>
        	<li><a href="#" class="key c121 fn"><span>F10</span></a></li>
        	<li><a href="#" class="key c122 fn"><span>F11</span></a></li>
        	<li><a href="#" class="key c123 fn"><span>F12</span></a></li>
        	<li><a href="#" class="key fn"><span>Eject</span></a></li>
        </ul>
    	<ul id="numbers">
	    	<li><a href="#" class="key c192"><b>~</b><span>`</span></a></li>
	    	<li><a href="#" class="key c49"><b>!</b><span>1</span></a></li>
	    	<li><a href="#" class="key c50"><b>@</b><span>2</span></a></li>
	    	<li><a href="#" class="key c51"><b>#</b><span>3</span></a></li>
	    	<li><a href="#" class="key c52"><b>$</b><span>4</span></a></li>
	    	<li><a href="#" class="key c53"><b>%</b><span>5</span></a></li>
	    	<li><a href="#" class="key c54"><b>^</b><span>6</span></a></li>
	    	<li><a href="#" class="key c55"><b>&amp;</b><span>7</span></a></li>
	    	<li><a href="#" class="key c56"><b>*</b><span>8</span></a></li>
	    	<li><a href="#" class="key c57"><b>(</b><span>9</span></a></li>
	    	<li><a href="#" class="key c48"><b>)</b><span>0</span></a></li>
	    	<li><a href="#" class="key c189 alt"><b>_</b><span>-</span></a></li>
	    	<li><a href="#" class="key c187"><b>+</b><span>=</span></a></li>
	    	<li><a href="#" class="key c46" id="delete"><span>Delete</span></a></li>
        </ul>
    	<ul id="qwerty">
	    	<li><a href="#" class="key c9" id="tab"><span>tab</span></a></li>
	    	<li><a href="#" class="key c81"><span>q</span></a></li>
	    	<li><a href="#" class="key c87"><span>w</span></a></li>
	    	<li><a href="#" class="key c69"><span>e</span></a></li>
	    	<li><a href="#" class="key c82"><span>r</span></a></li>
	    	<li><a href="#" class="key c84"><span>t</span></a></li>
	    	<li><a href="#" class="key c89"><span>y</span></a></li>
	    	<li><a href="#" class="key c85"><span>u</span></a></li>
	    	<li><a href="#" class="key c73"><span>i</span></a></li>
	    	<li><a href="#" class="key c79"><span>o</span></a></li>
	    	<li><a href="#" class="key c80"><span>p</span></a></li>
	    	<li><a href="#" class="key c219 alt"><b>{</b><span>[</span></a></li>
	    	<li><a href="#" class="key c221 alt"><b>}</b><span>]</span></a></li>
	    	<li><a href="#" class="key c220 alt"><b>|</b><span>\</span></a></li>
        </ul>
        <ul id="asdfg">
	    	<li><a href="#" class="key c20 alt" id="caps"><b></b><span>caps lock</span></a></li>
	    	<li><a href="#" class="key c65"><span>a</span></a></li>
	    	<li><a href="#" class="key c83"><span>s</span></a></li>
	    	<li><a href="#" class="key c68"><span>d</span></a></li>
	    	<li><a href="#" class="key c70"><span>f</span></a></li>
	    	<li><a href="#" class="key c71"><span>g</span></a></li>
	    	<li><a href="#" class="key c72"><span>h</span></a></li>
	    	<li><a href="#" class="key c74"><span>j</span></a></li>
	    	<li><a href="#" class="key c75"><span>k</span></a></li>
	    	<li><a href="#" class="key c76"><span>l</span></a></li>
	    	<li><a href="#" class="key c186 alt"><b>:</b><span>;</span></a></li>
	    	<li><a href="#" class="key c222 alt"><b>"</b><span>'</span></a></li>
	    	<li><a href="#" class="key c13 alt" id="enter"><span>return</span></a></li>
        </ul>
        <ul id="zxcvb">
	    	<li><a href="#" class="key c16 shiftleft"><span>Shift</span></a></li>
	    	<li><a href="#" class="key c90"><span>z</span></a></li>
	    	<li><a href="#" class="key c88"><span>x</span></a></li>
	    	<li><a href="#" class="key c67"><span>c</span></a></li>
	    	<li><a href="#" class="key c86"><span>v</span></a></li>
	    	<li><a href="#" class="key c66"><span>b</span></a></li>
	    	<li><a href="#" class="key c78"><span>n</span></a></li>
	    	<li><a href="#" class="key c77"><span>m</span></a></li>
	    	<li><a href="#" class="key c188 alt"><b>&lt;</b><span>,</span></a></li>
	    	<li><a href="#" class="key c190 alt"><b>&gt;</b><span>.</span></a></li>
	    	<li><a href="#" class="key c191 alt"><b>?</b><span>/</span></a></li>
	    	<li><a href="#" class="key c16 shiftright"><span>Shift</span></a></li>
        </ul>
		<ul id="bottomrow">
	    	<li><a href="#" class="key" id="fn"><span>fn</span></a></li>
	    	<li><a href="#" class="key c17" id="control"><span>control</span></a></li>
	    	<li><a href="#" class="key option" id="optionleft"><span>option</span></a></li>
	    	<li><a href="#" class="key command" id="commandleft"><span>command</span></a></li>
	    	<li><a href="#" class="key c32" id="spacebar"></a></li>
	    	<li><a href="#" class="key command" id="commandright"><span>command</span></a></li>
	    	<li><a href="#" class="key option" id="optionright"><span>option</span></a></li>
            <ol>
            	<li><a href="#" class="key c37" id="left">◄</span></a></li>
                <li>
                	<a href="#" class="key c38" id="up"><span>▲</span></a>
                	<a href="#" class="key c40" id="down"><span>▼</span></a>
                </li>
            	<li><a href="#" class="key c39" id="right"><span>►</span></a></li>
            </ol>
        </ul>
    </div>
    
   
   


<!-- 
▲◀▼▼▼▼▼
▲   ▼    ◀       ▼
<h1>riffwave.js - HTML5 sound synthesis via PCM encoding</h1>



<h2>What?</h2>

<p>"<strong>riffwave.js</strong>" is a tiny javascript library that encodes audio 
data to a format (<a href="http://en.wikipedia.org/wiki/Pulse-code_modulation">PCM</a>
inside a <a href="http://en.wikipedia.org/wiki/RIFF_(File_format)">RIFF container</a>) that
can be used to play synthesized sounds with the
<a href="http://en.wikipedia.org/wiki/Html5_audio#Audio_format_support">HTML5 audio</a> element.</p>

<p>Simply use the generated <a href="http://en.wikipedia.org/wiki/Data_Uri">data URI</a> as source.</p>

<p>Works in:</p>
<ul>
<li>Chrome 9</li>
<li>Firefox 3.6</li>
<li>Opera 11</li>
</ul>
<p>Other browsers not tested. Problem IE?</p>

<p><span style="border:1px solid #ccc;font-size:100%;padding:4px;16px">
Download <strong><a href="riffwave.js">riffwave.js</a></strong> (version 0.02)
</span></p>
-->
<h2>tests</h2>

<button onmousedown="play(audio1);">Noise</button>
<button onmousedown="play(audio2);">Sine wave</button>
<button onmousedown="play(audio6);">square wave</button>
<button onmousedown="play(audio3);">Effect</button>
<button onmousedown="play(audio4);">Stereo</button>
<button onmousedown="play(audio5);">5</button>
<!-- 
<h2>Sample usage</h2>

<pre class="sh_javascript">
var data = []; // just an array
for (var i=0; i<10000; i++) data[i] = Math.round(255 * Math.random()); // fill data with random samples
var wave = new RIFFWAVE(data); // create the wave file
var audio = new Audio(wave.dataURI); // create the HTML5 audio element
audio.play(); // some noise
</pre>

<h2>Another one</h2>
<pre class="sh_javascript">
var audio = new Audio(); // create the HTML5 audio element
var wave = new RIFFWAVE(); // create an empty wave file
var data = []; // yes, it's an array

wave.header.sampleRate = 44100; // set sample rate to 44KHz
wave.header.numChannels = 2; // two channels (stereo)

var i = 0;
while (i<100000) { 
  data[i++] = 128+Math.round(127*Math.sin(i/10)); // left speaker
  data[i++] = 128+Math.round(127*Math.sin(i/200)); // right speaker
}

wave.Make(data); // make the wave file
audio.src = wave.dataURI; // set audio source
audio.play(); // we should hear two tones one on each speaker
</pre>
-->


<hr>
<!-- 
<p>by Pedro Ladaria &lt;pedro.ladaria at gmail dot com&gt;</br>
twitter: @pladaria</p>
<p><a href="http://www.codebase.es">Go home</a></p>
-->
</body>
</html>
